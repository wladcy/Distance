@model Distance.Models.AddPhoneNumberViewModel
@{
    ViewBag.Title = "Numer telefonu";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("AddPhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Dodaj numer telefonu</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.DirectPhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-1">
            <img src="" />
        </div>
        <div class="col-md-4">
            @Html.DropDownListFor(m => m.Country, Model.Countries, new { @class = "form-control", @onchange="change()" })
        </div>
        <div class="col-md-1">
            @Html.TextBoxFor(m => m.DirectPhoneNumber, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Number, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Number, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Potwierdź" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        
        $("select option").filter(function () {
            //may want to use $.trim in here
            return $(this).text() == 'Polska';
        }).prop('selected', true);
        function change() {
            alert('Dupa');
        }
    </script>
}
